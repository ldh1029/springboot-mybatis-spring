<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.example.demo.entity.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, username, password, age
  </sql>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.example.demo.entity.User">
    insert into user (id, username, password, 
      age)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER})
  </insert>

    <select id="findById" parameterType="int" resultMap="BaseResultMap">
    SELECT * from user where id = #{id}
  </select>

    <select id="selectVagueUser" parameterType="string" resultMap="BaseResultMap">
    SELECT * from USER where username = #{name}
    </select>

    <select id="findUserByIn" parameterType="list" resultMap="BaseResultMap">
        SELECT * from user where id IN
        <foreach close=")" collection="ids" item="id" open="(" separator=",">
            #{id}
        </foreach>
    </select>

    <resultMap id="user_orders" type="com.example.demo.vo.resp.VoWrapOrderResp">
        <id column="id" property="id" jdbcType="INTEGER"></id>
        <id column="username" property="username" jdbcType="VARCHAR"></id>
        <id column="password" property="password" jdbcType="VARCHAR"></id>
        <id column="age" property="age" jdbcType="INTEGER"></id>
        <collection property="ordersList" ofType="com.example.demo.entity.Orders">
            <id column="oid" property="oid" jdbcType="INTEGER"></id>
            <result column="uid" property="uid" jdbcType="INTEGER"></result>
            <result column="address" property="address" jdbcType="INTEGER"></result>
            <result column="oname" property="oname" jdbcType="VARCHAR"></result>
            <result column="ocomment" property="ocomment" jdbcType="VARCHAR"></result>
        </collection>
    </resultMap>
    <select id="findOrderById" parameterType="int" resultMap="user_orders">
        SELECT * from user u LEFT JOIN orders o on u.id = o.uid WHERE u.id = #{id}
    </select>

</mapper>